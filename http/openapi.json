{
  "openapi": "3.1.0",
  "info": {
    "title": "Core API",
    "description": "HTTP API for the quant core engine.",
    "version": "v1"
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "description": "API Key",
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      },
      "masterApiKey": {
        "description": "API Key",
        "type": "apiKey",
        "name": "X-Master-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    },
    {
      "masterApiKey": []
    }
  ],
  "paths": {
    "/api/events/{source}/events": {
      "post": {
        "operationId": "postApiEvents:sourceEvents",
        "responses": {
          "200": {
            "description": "Event recorded successfully"
          },
          "400": {
            "description": "Invalid request body or parameters"
          },
          "404": {
            "description": "Source not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "payload": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "attributions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "uuid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "source",
            "required": true
          }
        ]
      }
    },
    "/api/event-source": {
      "post": {
        "operationId": "postApiEvent-source",
        "tags": [
          "Event Sources"
        ],
        "summary": "Create an Event Source",
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "eventTypes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getApiEvent-source",
        "tags": [
          "Event Sources"
        ],
        "summary": "List all Event Sources for the user",
        "responses": {}
      }
    },
    "/api/event-source/{name}": {
      "get": {
        "operationId": "getApiEvent-source:name",
        "tags": [
          "Event Sources"
        ],
        "summary": "Get an Event Source by name",
        "responses": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true
          }
        ]
      }
    },
    "/api/event-source/{name}/event-types": {
      "get": {
        "operationId": "getApiEvent-source:nameEvent-types",
        "tags": [
          "Event Sources"
        ],
        "summary": "List Event Types for a Source",
        "responses": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true
          }
        ]
      }
    },
    "/api/aggregation-source": {
      "post": {
        "operationId": "postApiAggregation-source",
        "tags": [
          "Aggregation Sources"
        ],
        "summary": "Add an Aggregation Source to a Report",
        "responses": {},
        "parameters": [
          {
            "in": "query",
            "name": "reportId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "targetCollection": {
                    "type": "string"
                  },
                  "granularity": {
                    "enum": [
                      "100ms",
                      "200ms",
                      "250ms",
                      "500ms",
                      "second",
                      "minute",
                      "5minute",
                      "10minute",
                      "15minute",
                      "30minute",
                      "hour",
                      "2hour",
                      "4hour",
                      "6hour",
                      "12hour",
                      "day",
                      "3day",
                      "7day",
                      "15day",
                      "30day",
                      "45day",
                      "60day",
                      "90day"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "sources": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "sources",
                      "events"
                    ]
                  },
                  "aggregations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "COUNT",
                            "SUM",
                            "CATEGORY",
                            "COMPOUND_SUM",
                            "BOOLEAN"
                          ]
                        },
                        "payloadField": {
                          "type": "string"
                        },
                        "categoryField": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "targetCollection",
                  "aggregations"
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getApiAggregation-source",
        "tags": [
          "Aggregation Sources"
        ],
        "summary": "List Aggregation Sources for a Report",
        "responses": {},
        "parameters": [
          {
            "in": "query",
            "name": "reportId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/api/aggregation-source/{sourceId}": {
      "delete": {
        "operationId": "deleteApiAggregation-source:sourceId",
        "tags": [
          "Aggregation Sources"
        ],
        "summary": "Remove an Aggregation Source from a Report",
        "responses": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "sourceId",
            "required": true
          }
        ]
      }
    },
    "/api/report": {
      "post": {
        "operationId": "postApiReport",
        "tags": [
          "Reports"
        ],
        "summary": "Create a Report Definition",
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getApiReport",
        "tags": [
          "Reports"
        ],
        "summary": "List all Report Definitions for the user",
        "responses": {}
      }
    },
    "/api/report/{id}": {
      "get": {
        "operationId": "getApiReport:id",
        "tags": [
          "Reports"
        ],
        "summary": "Get a Report Definition",
        "responses": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "patchApiReport:id",
        "tags": [
          "Reports"
        ],
        "summary": "Update a Report Definition",
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": []
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "deleteApiReport:id",
        "tags": [
          "Reports"
        ],
        "summary": "Delete a Report Definition",
        "responses": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ]
      }
    },
    "/api/auth/keys": {
      "post": {
        "operationId": "postApiAuthKeys",
        "tags": [
          "auth"
        ],
        "responses": {
          "201": {
            "description": "API key created successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string",
                    "minLength": 1
                  },
                  "quotas": {
                    "type": "object",
                    "properties": {
                      "requestsPerSecond": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "requestsPerDay": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "totalRequests": {
                        "type": "integer",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "requestsPerSecond",
                      "requestsPerDay",
                      "totalRequests"
                    ]
                  }
                },
                "required": [
                  "owner",
                  "quotas"
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/keys/{key}": {
      "patch": {
        "operationId": "patchApiAuthKeys:key",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "API key updated successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "API key not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string",
                    "minLength": 1
                  },
                  "quotas": {
                    "type": "object",
                    "properties": {
                      "requestsPerSecond": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "requestsPerDay": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "totalRequests": {
                        "type": "integer",
                        "minimum": 1
                      }
                    },
                    "required": []
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "required": []
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "deleteApiAuthKeys:key",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "API key deleted successfully"
          },
          "401": {
            "description": "Unauthorized (requires master api key)"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getApiAuthKeys:key",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "API key details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "API key not found"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ]
      }
    },
    "/api/auth/usage": {
      "get": {
        "operationId": "getApiAuthUsage",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "Usage statistics"
          },
          "400": {
            "description": "Bad Request: apiKey query param is required for master key users"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "API key not found"
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "apiKey",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  }
}
