// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};

export type PostApiAuthKeysData = {
  body?: {
    owner: string;
    quotas: {
      requestsPerSecond: number;
      requestsPerDay: number;
      totalRequests: number;
    };
  };
  path?: never;
  query?: never;
  url: "/api/auth/keys";
};

export type PostApiAuthKeysErrors = {
  /**
   * Error response
   */
  400: {
    error: string;
  };
  /**
   * Error response
   */
  401: {
    error: string;
  };
};

export type PostApiAuthKeysError =
  PostApiAuthKeysErrors[keyof PostApiAuthKeysErrors];

export type PostApiAuthKeysResponses = {
  /**
   * API key created successfully
   */
  201: {
    key: string;
    owner: string;
    quotas: {
      requestsPerSecond: number;
      requestsPerDay: number;
      totalRequests: number;
    };
    enabled: boolean;
  };
};

export type PostApiAuthKeysResponse =
  PostApiAuthKeysResponses[keyof PostApiAuthKeysResponses];

export type DeleteApiAuthKeysKeyData = {
  body?: never;
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type DeleteApiAuthKeysKeyErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
};

export type DeleteApiAuthKeysKeyError =
  DeleteApiAuthKeysKeyErrors[keyof DeleteApiAuthKeysKeyErrors];

export type DeleteApiAuthKeysKeyResponses = {
  /**
   * Successful operation
   */
  200: {
    success: boolean;
  };
};

export type DeleteApiAuthKeysKeyResponse =
  DeleteApiAuthKeysKeyResponses[keyof DeleteApiAuthKeysKeyResponses];

export type GetApiAuthKeysKeyData = {
  body?: never;
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type GetApiAuthKeysKeyErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiAuthKeysKeyError =
  GetApiAuthKeysKeyErrors[keyof GetApiAuthKeysKeyErrors];

export type GetApiAuthKeysKeyResponses = {
  /**
   * API key details
   */
  200: {
    key: string;
    owner: string;
    quotas: {
      requestsPerSecond: number;
      requestsPerDay: number;
      totalRequests: number;
    };
    enabled: boolean;
  };
};

export type GetApiAuthKeysKeyResponse =
  GetApiAuthKeysKeyResponses[keyof GetApiAuthKeysKeyResponses];

export type PatchApiAuthKeysKeyData = {
  body?: {
    owner?: string;
    quotas?: {
      requestsPerSecond?: number;
      requestsPerDay?: number;
      totalRequests?: number;
    };
    enabled?: boolean;
  };
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type PatchApiAuthKeysKeyErrors = {
  /**
   * Error response
   */
  400: {
    error: string;
  };
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type PatchApiAuthKeysKeyError =
  PatchApiAuthKeysKeyErrors[keyof PatchApiAuthKeysKeyErrors];

export type PatchApiAuthKeysKeyResponses = {
  /**
   * API key updated successfully
   */
  200: {
    key: string;
    owner: string;
    quotas: {
      requestsPerSecond: number;
      requestsPerDay: number;
      totalRequests: number;
    };
    enabled: boolean;
  };
};

export type PatchApiAuthKeysKeyResponse =
  PatchApiAuthKeysKeyResponses[keyof PatchApiAuthKeysKeyResponses];

export type GetApiAuthUsageData = {
  body?: never;
  path?: never;
  query?: {
    apiKey?: string;
  };
  url: "/api/auth/usage";
};

export type GetApiAuthUsageErrors = {
  /**
   * Error response
   */
  400: {
    error: string;
  };
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiAuthUsageError =
  GetApiAuthUsageErrors[keyof GetApiAuthUsageErrors];

export type GetApiAuthUsageResponses = {
  /**
   * Usage statistics
   */
  200: {
    second: number;
    day: number;
    total: number;
  };
};

export type GetApiAuthUsageResponse =
  GetApiAuthUsageResponses[keyof GetApiAuthUsageResponses];

export type PostApiEventsSourceEventsData = {
  body?: {
    type: string;
    uuid: string;
    payload?: {
      [key: string]: unknown;
    };
    attributions?: Array<{
      type: string;
      value: string;
    }>;
    timestamp?: string;
  };
  path: {
    source: string;
  };
  query?: never;
  url: "/api/events/{source}/events";
};

export type PostApiEventsSourceEventsErrors = {
  /**
   * Invalid request body or parameters
   */
  400: unknown;
  /**
   * Source not found
   */
  404: unknown;
};

export type PostApiEventsSourceEventsResponses = {
  /**
   * Event recorded successfully
   */
  200: unknown;
};

export type GetApiEventSourcesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/event-sources";
};

export type GetApiEventSourcesErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
};

export type GetApiEventSourcesError =
  GetApiEventSourcesErrors[keyof GetApiEventSourcesErrors];

export type GetApiEventSourcesResponses = {
  /**
   * A list of event source definitions
   */
  200: Array<{
    id: string;
    name: string;
    description?: string;
    eventTypes?: Array<{
      name: string;
      description?: string;
    }>;
    retention?: {
      hotDays: number;
      offloaderPlugin?: string;
    };
  }>;
};

export type GetApiEventSourcesResponse =
  GetApiEventSourcesResponses[keyof GetApiEventSourcesResponses];

export type PostApiEventSourcesData = {
  body?: {
    name: string;
    description?: string;
    eventTypes?: Array<{
      name: string;
      description?: string;
    }>;
  };
  path?: never;
  query?: never;
  url: "/api/event-sources";
};

export type PostApiEventSourcesResponses = {
  /**
   * Event source created successfully
   */
  201: {
    id: string;
    name: string;
    description?: string;
    eventTypes?: Array<{
      name: string;
      description?: string;
    }>;
    retention?: {
      hotDays: number;
      offloaderPlugin?: string;
    };
  };
};

export type PostApiEventSourcesResponse =
  PostApiEventSourcesResponses[keyof PostApiEventSourcesResponses];

export type GetApiEventSourcesNameData = {
  body?: never;
  path: {
    name: string;
  };
  query?: never;
  url: "/api/event-sources/{name}";
};

export type GetApiEventSourcesNameErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiEventSourcesNameError =
  GetApiEventSourcesNameErrors[keyof GetApiEventSourcesNameErrors];

export type GetApiEventSourcesNameResponses = {
  /**
   * A single event source definition
   */
  200: {
    id: string;
    name: string;
    description?: string;
    eventTypes?: Array<{
      name: string;
      description?: string;
    }>;
    retention?: {
      hotDays: number;
      offloaderPlugin?: string;
    };
  };
};

export type GetApiEventSourcesNameResponse =
  GetApiEventSourcesNameResponses[keyof GetApiEventSourcesNameResponses];

export type GetApiEventSourcesNameEventTypesData = {
  body?: never;
  path: {
    name: string;
  };
  query?: never;
  url: "/api/event-sources/{name}/event-types";
};

export type GetApiEventSourcesNameEventTypesErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiEventSourcesNameEventTypesError =
  GetApiEventSourcesNameEventTypesErrors[
    keyof GetApiEventSourcesNameEventTypesErrors
  ];

export type GetApiEventSourcesNameEventTypesResponses = {
  /**
   * A list of event types for the source
   */
  200: Array<{
    name: string;
    description?: string;
  }>;
};

export type GetApiEventSourcesNameEventTypesResponse =
  GetApiEventSourcesNameEventTypesResponses[
    keyof GetApiEventSourcesNameEventTypesResponses
  ];

export type GetApiAggregationSourcesData = {
  body?: never;
  path?: never;
  query: {
    reportId: string;
  };
  url: "/api/aggregation-sources";
};

export type GetApiAggregationSourcesErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiAggregationSourcesError =
  GetApiAggregationSourcesErrors[keyof GetApiAggregationSourcesErrors];

export type GetApiAggregationSourcesResponses = {
  /**
   * A list of aggregation sources for the report
   */
  200: Array<{
    id: string;
    reportId: string;
    targetCollection: string;
    granularity:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    aggregations?: Array<{
      type: "COUNT" | "SUM" | "CATEGORY" | "COMPOUND_SUM" | "BOOLEAN";
      payloadField?: string;
      categoryField?: string;
    }>;
  }>;
};

export type GetApiAggregationSourcesResponse =
  GetApiAggregationSourcesResponses[keyof GetApiAggregationSourcesResponses];

export type PostApiAggregationSourcesData = {
  body?: {
    targetCollection: string;
    granularity?:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    filter?: {
      sources: Array<{
        id: string;
        name: string;
      }>;
      events: Array<string>;
    };
    aggregations?: Array<{
      type: "COUNT" | "SUM" | "CATEGORY" | "COMPOUND_SUM" | "BOOLEAN";
      payloadField?: string;
      categoryField?: string;
    }>;
  };
  path?: never;
  query: {
    reportId: string;
  };
  url: "/api/aggregation-sources";
};

export type PostApiAggregationSourcesErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type PostApiAggregationSourcesError =
  PostApiAggregationSourcesErrors[keyof PostApiAggregationSourcesErrors];

export type PostApiAggregationSourcesResponses = {
  /**
   * Aggregation source created successfully
   */
  201: {
    id: string;
    reportId: string;
    targetCollection: string;
    granularity:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    aggregations?: Array<{
      type: "COUNT" | "SUM" | "CATEGORY" | "COMPOUND_SUM" | "BOOLEAN";
      payloadField?: string;
      categoryField?: string;
    }>;
  };
};

export type PostApiAggregationSourcesResponse =
  PostApiAggregationSourcesResponses[keyof PostApiAggregationSourcesResponses];

export type DeleteApiAggregationSourcesSourceIdData = {
  body?: never;
  path: {
    sourceId: string;
  };
  query?: never;
  url: "/api/aggregation-sources/{sourceId}";
};

export type DeleteApiAggregationSourcesSourceIdErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
  /**
   * Error response
   */
  403: {
    error: string;
  };
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type DeleteApiAggregationSourcesSourceIdError =
  DeleteApiAggregationSourcesSourceIdErrors[
    keyof DeleteApiAggregationSourcesSourceIdErrors
  ];

export type DeleteApiAggregationSourcesSourceIdResponses = {
  /**
   * Successful operation
   */
  200: {
    success: boolean;
  };
};

export type DeleteApiAggregationSourcesSourceIdResponse =
  DeleteApiAggregationSourcesSourceIdResponses[
    keyof DeleteApiAggregationSourcesSourceIdResponses
  ];

export type GetApiReportsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/reports";
};

export type GetApiReportsErrors = {
  /**
   * Error response
   */
  401: {
    error: string;
  };
};

export type GetApiReportsError = GetApiReportsErrors[keyof GetApiReportsErrors];

export type GetApiReportsResponses = {
  /**
   * A list of report definitions
   */
  200: Array<{
    id: string;
    name: string;
    description?: string;
    active: boolean;
    createdAt: string;
    updatedAt: string;
  }>;
};

export type GetApiReportsResponse =
  GetApiReportsResponses[keyof GetApiReportsResponses];

export type PostApiReportsData = {
  body?: {
    name: string;
    description?: string;
    active?: boolean;
  };
  path?: never;
  query?: never;
  url: "/api/reports";
};

export type PostApiReportsResponses = {
  /**
   * Report created successfully
   */
  201: {
    id: string;
    name: string;
    description?: string;
    active: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PostApiReportsResponse =
  PostApiReportsResponses[keyof PostApiReportsResponses];

export type PostApiReportsIdDataData = {
  body?: {
    metric: {
      type: "COUNT" | "SUM" | "CATEGORY" | "COMPOUND_SUM" | "BOOLEAN";
      field?: string;
    };
    timeRange: {
      start: string;
      end: string;
    };
    granularity:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    attribution?: {
      type: string;
      value: string;
    };
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/api/reports/{id}/data";
};

export type PostApiReportsIdDataErrors = {
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type PostApiReportsIdDataError =
  PostApiReportsIdDataErrors[keyof PostApiReportsIdDataErrors];

export type PostApiReportsIdDataResponses = {
  /**
   * Report data
   */
  200: Array<{
    time: string;
    value: number;
    category?: string;
  }>;
};

export type PostApiReportsIdDataResponse =
  PostApiReportsIdDataResponses[keyof PostApiReportsIdDataResponses];

export type PostApiReportsIdDatasetData = {
  body?: {
    metrics: Array<string>;
    timeRange: {
      start: string;
      end: string;
    };
    granularity:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    attribution?: {
      type: string;
      value: string;
    };
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/api/reports/{id}/dataset";
};

export type PostApiReportsIdDatasetErrors = {
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type PostApiReportsIdDatasetError =
  PostApiReportsIdDatasetErrors[keyof PostApiReportsIdDatasetErrors];

export type PostApiReportsIdDatasetResponses = {
  /**
   * Dataset data
   */
  200: Array<{
    [key: string]: unknown;
  }>;
};

export type PostApiReportsIdDatasetResponse =
  PostApiReportsIdDatasetResponses[keyof PostApiReportsIdDatasetResponses];

export type DeleteApiReportsIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/api/reports/{id}";
};

export type DeleteApiReportsIdErrors = {
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type DeleteApiReportsIdError =
  DeleteApiReportsIdErrors[keyof DeleteApiReportsIdErrors];

export type DeleteApiReportsIdResponses = {
  /**
   * Successful operation
   */
  200: {
    success: boolean;
  };
};

export type DeleteApiReportsIdResponse =
  DeleteApiReportsIdResponses[keyof DeleteApiReportsIdResponses];

export type GetApiReportsIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/api/reports/{id}";
};

export type GetApiReportsIdErrors = {
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type GetApiReportsIdError =
  GetApiReportsIdErrors[keyof GetApiReportsIdErrors];

export type GetApiReportsIdResponses = {
  /**
   * A single report definition
   */
  200: {
    id: string;
    name: string;
    description?: string;
    active: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type GetApiReportsIdResponse =
  GetApiReportsIdResponses[keyof GetApiReportsIdResponses];

export type PatchApiReportsIdData = {
  body?: {
    name?: string;
    description?: string;
    active?: boolean;
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/api/reports/{id}";
};

export type PatchApiReportsIdErrors = {
  /**
   * Error response
   */
  404: {
    error: string;
  };
};

export type PatchApiReportsIdError =
  PatchApiReportsIdErrors[keyof PatchApiReportsIdErrors];

export type PatchApiReportsIdResponses = {
  /**
   * Report updated successfully
   */
  200: {
    id: string;
    name: string;
    description?: string;
    active: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PatchApiReportsIdResponse =
  PatchApiReportsIdResponses[keyof PatchApiReportsIdResponses];
