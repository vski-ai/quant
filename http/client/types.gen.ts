// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};

export type PostApiEventsSourceEventsData = {
  body?: {
    type: string;
    uuid: string;
    payload?: {
      [key: string]: unknown;
    };
    attributions?: Array<{
      type: string;
      value: string;
    }>;
  };
  path: {
    source: string;
  };
  query?: never;
  url: "/api/events/{source}/events";
};

export type PostApiEventsSourceEventsErrors = {
  /**
   * Invalid request body or parameters
   */
  400: unknown;
  /**
   * Source not found
   */
  404: unknown;
};

export type PostApiEventsSourceEventsResponses = {
  /**
   * Event recorded successfully
   */
  200: unknown;
};

export type GetApiEventSourceData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/event-source";
};

export type PostApiEventSourceData = {
  body?: {
    name: string;
    description?: string;
    eventTypes?: Array<{
      name: string;
      description?: string;
    }>;
  };
  path?: never;
  query?: never;
  url: "/api/event-source";
};

export type GetApiEventSourceNameData = {
  body?: never;
  path: {
    name: string;
  };
  query?: never;
  url: "/api/event-source/{name}";
};

export type GetApiEventSourceNameEventTypesData = {
  body?: never;
  path: {
    name: string;
  };
  query?: never;
  url: "/api/event-source/{name}/event-types";
};

export type GetApiAggregationSourceData = {
  body?: never;
  path?: never;
  query: {
    reportId: string;
  };
  url: "/api/aggregation-source";
};

export type PostApiAggregationSourceData = {
  body?: {
    targetCollection: string;
    granularity?:
      | "100ms"
      | "200ms"
      | "250ms"
      | "500ms"
      | "second"
      | "minute"
      | "5minute"
      | "10minute"
      | "15minute"
      | "30minute"
      | "hour"
      | "2hour"
      | "4hour"
      | "6hour"
      | "12hour"
      | "day"
      | "3day"
      | "7day"
      | "15day"
      | "30day"
      | "45day"
      | "60day"
      | "90day";
    filter?: {
      sources: Array<{
        id: string;
        name: string;
      }>;
      events: Array<string>;
    };
    aggregations: Array<{
      type: "COUNT" | "SUM" | "CATEGORY" | "COMPOUND_SUM" | "BOOLEAN";
      payloadField?: string;
      categoryField?: string;
    }>;
  };
  path?: never;
  query: {
    reportId: string;
  };
  url: "/api/aggregation-source";
};

export type DeleteApiAggregationSourceSourceIdData = {
  body?: never;
  path: {
    sourceId: string;
  };
  query?: never;
  url: "/api/aggregation-source/{sourceId}";
};

export type GetApiReportData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/report";
};

export type PostApiReportData = {
  body?: {
    name: string;
    description?: string;
    active?: boolean;
  };
  path?: never;
  query?: never;
  url: "/api/report";
};

export type DeleteApiReportIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/api/report/{id}";
};

export type GetApiReportIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/api/report/{id}";
};

export type PatchApiReportIdData = {
  body?: {
    name?: string;
    description?: string;
    active?: boolean;
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/api/report/{id}";
};

export type PostApiAuthKeysData = {
  body?: {
    owner: string;
    quotas: {
      requestsPerSecond: number;
      requestsPerDay: number;
      totalRequests: number;
    };
  };
  path?: never;
  query?: never;
  url: "/api/auth/keys";
};

export type PostApiAuthKeysErrors = {
  /**
   * Invalid request body
   */
  400: unknown;
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PostApiAuthKeysResponses = {
  /**
   * API key created successfully
   */
  201: unknown;
};

export type DeleteApiAuthKeysKeyData = {
  body?: never;
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type DeleteApiAuthKeysKeyErrors = {
  /**
   * Unauthorized (requires master api key)
   */
  401: unknown;
};

export type DeleteApiAuthKeysKeyResponses = {
  /**
   * API key deleted successfully
   */
  200: unknown;
};

export type GetApiAuthKeysKeyData = {
  body?: never;
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type GetApiAuthKeysKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * API key not found
   */
  404: unknown;
};

export type GetApiAuthKeysKeyResponses = {
  /**
   * API key details
   */
  200: unknown;
};

export type PatchApiAuthKeysKeyData = {
  body?: {
    owner?: string;
    quotas?: {
      requestsPerSecond?: number;
      requestsPerDay?: number;
      totalRequests?: number;
    };
    enabled?: boolean;
  };
  path: {
    key: string;
  };
  query?: never;
  url: "/api/auth/keys/{key}";
};

export type PatchApiAuthKeysKeyErrors = {
  /**
   * Invalid request body
   */
  400: unknown;
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * API key not found
   */
  404: unknown;
};

export type PatchApiAuthKeysKeyResponses = {
  /**
   * API key updated successfully
   */
  200: unknown;
};

export type GetApiAuthUsageData = {
  body?: never;
  path?: never;
  query?: {
    apiKey?: string;
  };
  url: "/api/auth/usage";
};

export type GetApiAuthUsageErrors = {
  /**
   * Bad Request: apiKey query param is required for master key users
   */
  400: unknown;
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * API key not found
   */
  404: unknown;
};

export type GetApiAuthUsageResponses = {
  /**
   * Usage statistics
   */
  200: unknown;
};
